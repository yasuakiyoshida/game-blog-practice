<div class="game-body">
  <%= attachment_image_tag @game, :image %>
  <p>タイトル：<%= @game.game_title %></p>
  <p>感想：<%= @game.impressions %></p>
  <p>ユーザーネーム：<%= @game.user.name %></p>
  <p>投稿日時：<%= @game.created_at.strftime('%Y/%m/%d') %></p> <!-- created_atカラム：ActiceRecordが自動的にデータを作成した日時を記録する -->
  <% if @game.user == current_user %>
    <%= link_to "削除", game_path(@game), method: :delete %>
  <% end %>
  <!-- 『いいね』機能 -->
  <% if @game.favorited_by?(current_user) %> <!-- 投稿に付けられた『いいね』に自分（ログインユーザー）が含まれているか -->
    <p> <!-- 含まれている場合 -->
      <%= link_to game_favorites_path(@game), method: :delete do %> <!-- 『いいね』削除,ルーティングにgame_idが必要だから@game -->
        ♥<%= @game.favorites.count %> いいね
      <% end %>
    </p>
    <% else %>
    <p> <!-- 含まれていない場合 -->
      <%= link_to game_favorites_path(@game), method: :post do %> <!-- 『いいね』追加 -->
        ♡<%= @game.favorites.count %> いいね
      <% end %>
    </p>
  <% end %>
</div>

<div class="comments">
<p>コメント件数：<%= @game.post_comments.count %></p>
<% @game.post_comments.each do |post_comment| %>
  <p><%= attachment_image_tag post_comment.user, :profile_image, :fill, 60, 60, fallback: "no_image.jpg" %></p> <!-- 画像を保持しているのはpost_commentモデルに紐づけられたuserモデル -->
  <%= post_comment.user.name %>
  <%= post_comment.created_at.strftime('%Y/%m/%d') %><%= post_comment.comment %>
  <% if post_comment.user == current_user %>
  <div class="comment-delete">
    <%= link_to "削除", game_post_comment_path(post_comment.game, post_comment), method: :delete %> <!-- post_commentに結びついたgameとpost_commentの2つを用意 -->
  </div>
  <% end %>
<% end %>
</div>
<div class="new-comment">
<%= form_with(model:[@game, @post_comment], local: true) do |f| %>
  <%= f.text_area :comment, rows:'5',placeholder: "コメントをここに" %>
  <%= f.submit "送信する" %>
<% end %>
</div>